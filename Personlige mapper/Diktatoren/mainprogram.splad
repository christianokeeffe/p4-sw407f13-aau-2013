int numberOfContainers <-- 4;
int ButtonOne <-- 12;
int ButtonTen <-- 10;
int ButtonConfirm <-- 13;
bool IsStaffInput <-- false;
string[numberOfContainers] ContainerNames;
container[numberOfContainers] Containers;
int maxRecipieSize <-- 10;

function RFIDFound return nothing using(int DrinkID, int Amount)
begin
	if(IsStaffInput)
	begin
	end
	else
	begin
		call StaffAction();
	end
	return nothing;
end

function GetInputNumber return int using()
begin
	int ReturnValue <-- 0;
	while(call digitalRead(ButtonConfirm) = LOW)
	begin
		call delay(100);
		if(call digitalRead(ButtonOne) = HIGH)
		begin
			ReturnValue <-- ReturnValue + 1;
		end
		else if(call digitalRead(ButtonTen) = HIGH)
		begin
			ReturnValue <-- ReturnValue + 10;
		end
		call LCDPrint(string(ReturnValue), 1);
	end
	return ReturnValue;
end

function MakeCollins return nothing using(int drinksLeft)
begin
	int numberOfSteps <-- 4;
	int[maxRecipieSize][2] recipie;
	recipie[1][1] <-- 1;
	recipie[1][2] <-- 3;
	recipie[2][1] <-- 3;
	recipie[2][2] <-- 2;
	recipie[3][1] <-- 2;
	recipie[3][2] <-- 1;
	recipie[4][1] <-- 4;
	recipie[4][2] <-- 5;
	call pourDrink(recipie, numberOfSteps, drinksLeft);
	return nothing;
end

function CustomerAction return nothing using(int DrinkID, int Amount)
begin
	if(Amount > 0)
	begin
	switch(DrinkID)
	begin
		case 23:
			call LCDPrint("Confirm to make:", 0);
			call LCDPrint("Tom Collins", 1);
			call delay(100);
			bool run <-- true;
			while(run)
			begin
				if(call digitalRead(12) = HIGH)
				begin
					call RFIDWrite(DrinkID, Amount-1);
					call MakeCollins(Amount-1);
					run <-- false;
				end
				else if (call digitalRead(2) = HIGH OR call digitalRead(4) = HIGH)
				begin
					call LCDPrint("Drink making", 0);
					call LCDPrint("cancelled",1);
					run <-- false;
				end
			end
			break;
		default:
			call LCDPrint("Error with RFID data", 0);
			call LCDPrint("Contact staff", 1);
			break;
	end
	end
	else
	begin
		call LCDPrint("Your balance is", 0);
		call LCDPrint("too low", 1);
		call delay(3000);
		call LCDClear();
	end
	return nothing;
end

function pourDrink return nothing using(int[maxRecipieSize][2] recipie, int numberOfSteps, int drinksLeft)
begin
	int i;
	from i <-- 0 to numberOfSteps step 1
	begin
		call LCDPrint("Pouring " + ContainerNames[recipie[i][1]], 0);
		call LCDPrint("Phase "+string(i)+"/" + string(numberOfSteps), 1);
		call pour(Containers[recipie[i][1]], ContainerNames[recipie[i][2]]);
	end
	
	call LCDPrint("Drinks left:", 0);
	call LCDPrint(string(drinksLeft),1);
	call delay(2000);
	call LCDPrint("Drink is served", 0);
	call LCDPrint("    by SPLAD    ", 1);
	return nothing;
end

function pour return nothing using(container cont, int Amount)
begin
	call digitalWrite(cont, HIGH);
	call delay(Amount*1000);
	call digitalWrite(cont, LOW);
	return nothing;
end

function StaffAction return nothing using()
begin
	call LCDPrint("Type ID of the", 0);
	call LCDPrint("drink to buy", 1);
	
	/*Wait for user to press a button*/
	call WaitOnInput();
	call LCDClear();
	call LCDPrint("Drink ID:", 0);
	
	int drinkID <-- call GetInputNumber();
	call LCDPrint("Number of drinks", 0);
	call LCDPrint("",1);
	/*Wait for user to press a button*/
	call WaitOnInput();
	
	int Amount <-- call GetInputNumber();
	
	call RFIDWrite(drinkID, Amount);
	call LCDPrint("", 1);
	call LCDPrint("Amount: " + string(Amount), 1);
	call LCDPrint("Drink ID: " + string(drinkID), 0);
	call delay(2000);
	call StartMsg();
	return nothing;
end

function StartMsg return nothing using()
begin
	call LCDPrint("Welcome to", 0);
	call LCDPrint("      SPLAD     ", 1);
	return nothing;
end

function ChangeMode return bool using(bool mode)
begin
	string OutputString <-- "";
	bool returnValue <-- false;
	if(mode = true)
	begin
		OutputString <-- "staffmode";
	end
	else if(mode = false)
	begin
		OutputString <-- "customermode";
	end
	
	if(OutputString != "")
	begin
		call LCDPrint("Confirm change", 0);
		call LCDPrint("to " + OutputString, 1);
		call WaitOnInput();
		if(call digitalRead(ButtonConfirm) = HIGH)
		begin
			returnValue <-- mode;
			call LCDClear();
			call LCDPrint(OutputString + " on", 0);
			call delay(2000);
			call StartMsg();
		end
		else
		begin
			call LCDPrint("Customer", 0);
			call LCDPrint("mode on", 1);
			call delay(2000);
			call StartMsg();
		end
	end
	
	return returnValue;
end

function loop return nothing using()
begin
	if(call digitalRead(ButtonOne) = HIGH)
	begin
		call ChangeMode(true);
	end
	else if(call digitalRead(ButtonTen) = HIGH)
	begin
		call ChangeMode(false);
	end
	return nothing;
end

function WaitOnInput return nothing using()
begin
	while(call digitalRead(ButtonOne) = LOW AND call digitalRead(ButtonTen) AND call digitalRead(ButtonConfirm))
	begin
		call delay(50);
	end
	return nothing;
end

function setup return nothing using()
begin
	container Gin <-- A0;
	container Sugar <-- A2;
	container Soda <-- A1;
	container Lemon <-- A5;
	Containers[1] <-- Gin;
	ContainerNames[1] <-- "Gin";
	Containers[2] <-- Sugar;
	ContainerNames[2] <-- "Sugar";
	Containers[3] <-- Lemon;
	ContainerNames[3] <-- "Lemon";
	Containers[4] <-- Soda;
	ContainerNames[4] <-- "Soda";
	
	call pinMode(Gin, OUTPUT);
	call pinMode(Sugar, OUTPUT);
	call pinMode(Soda, OUTPUT);
	call pinMode(Lemon, OUTPUT);
	call pinMode(ButtonOne, INPUT);
	call pinMode(ButtonTen, INPUT);
	call pinMode(ButtonConfirm, INPUT);
	call StartMsg();
	return nothing;
end