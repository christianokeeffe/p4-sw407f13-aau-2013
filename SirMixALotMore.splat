function Setup return nothing using()
begin
	container DarkRum <-- 15;
	container Vodka <-- 4;
	container Cola <-- 3;
	container Sprite <-- 10;
	container Ice <-- 1;
	container JaggerMeister <-- 5;
	container EnergiDrink <-- 7;
	
	int[] ID;
	ID[1] <-- 101;
	ID[2] <-- 1337;
	
	string[][] Recipe;
	Recipe[1][1] <-- "Cola";
	Recipe[1][2] <-- "DarkRum";
	Recipe[2][1] <-- "Sprite";
	Recipe[2][2] <-- "Vodka";

	int[][] Quantity;
	Quantity[1][1] <-- 5;
	Quantity[1][2] <-- 2;
	Quantity[2][1] <-- 2;
	Quantity[2][2] <-- 2;

	/* Recipes of the drink
	drink 101 
	begin
		ID <-- ColaRum;
		NumberOfElements <-- 2;
		Recipe <-- [Cola,DarkRum];
		Quantity <-- [5,2];
		Size <-- Big;
	end
	
	drink 1337
	begin
		ID <-- VodkaSprite;
		NumberOfElements <-- 2;
		Recipe <-- [Sprite,Vodka];
		Quantity <-- [2,2];
		Size <-- Medium;
	end
	*/
	return nothing;
end

function Pour return nothing using (int pin, double time)
begin
	call Output(pin, HIGH)
	call delay(int(time*1000))
	call Output(pin, LOW)
	
	return nothing
end

function Serve return nothing using (int ID, string[] Recipe, int[] Quantity)
begin
	call GetGlass();
	int x <-- 1;
	from x to x > 2	step x <-- x + 1
	begin
		call Pour (recipe[x],quantity[x]);
	end
	call LCDprint("Serving your drink, enjoy!");
	/*
	function to serve the glass
	*/
	return nothing;
end

function LCDPrint return nothing using(string text)
begin
/*Function to write a string to the LCD connected to the arduino*/
return nothing;
end

function GetGlass return nothing using()
begin
	/* a function to get a glass */
	return nothing;
end

function InputID return string using()
begin
	string Astring;
	/* a function to get RFID input, the drink ID */
	return AString; /*place holder for a string from the RFID*/
end

function InputNumb return string using()
begin
	int ANumber;
	/* a function to get RFID input, the number of drinks */
	return ANumber; /*place holder for an int from the RFID*/
end

function delay return nothing using(int time)
begin
	/* a function to get the a delay in the program using the Arudio */
	return nothing;
end

function isValid return bool using (string ID)
begin
	bool result;
	/*function to determine if an ID is valid and returns the result */
	return result;
end

function writeToRFID return nothing using (int Number)
begin
	/*function for writting to the RFID*/
	return nothing;
end

function MakeDrink return nothing using ()
begin
	string message <-- "";
	int x;
	
	while (InputID() = "")
		begin
			call LCDprint("Please, place your RFID tag");
			call delay(1000);
		end
	if (isValid(Input(ID)) AND InputNumb() > 0)
	begin
		from x <-- 1 to ID.size step 1
		begin
			if (ID[x] = InputID())
			begin
				call Serve(x, Ricipe[x][], Quantity[x][]);
				call writeToRFID(DrinkNumber <-- DrinkNumber - 1);
			end
		end
	end
	else if((!(isValid(Input(ID))) AND InputNumb() > 0) OR (isValid(Input(ID)) AND InputNumb() = 0))
	begin
		if(!(isValid(Input(ID))))
		begin
			message <-- "Your order does not exists!";
		end
		else if (InputNumb() = 0)
		begin
			message <-- "Your are out of drinks!";
		end
		call LCDprint(message);
		call delay(5000);
	end
	else
	begin			
		message <-- "Your order does not exists and your are out of drinks!"
		call LCDprint(message);
		call delay(5000);
	end
	
	return nothing
end