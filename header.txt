#include <SoftwareSerial.h>
#include <LiquidCrystal.h>

LiquidCrystal lcd(5, 13, 6, 9, 10, 11);
SoftwareSerial rfid(7, 8);

//Prototypes
void check_for_notag(void);
void halt(void);
void parse(void);
void print_serial(void);
void read_serial(void);
void seek(void);
void set_flag(void);
boolean authenticate(String tempid, String tempcount);
boolean write_Block(String paraid, String paracount);
boolean RFIDWrite(int id, int count);
String RFIDRead(void);
void LCDPrint(String input, int line);

//Global var
int flag = 0;
int Str1[11];
int Str2[11];
int Str3[11];
int Str4[11];
int Str5[4];

char in1 = 0;
char in2 = 0;
char in3 = 0;
char in4 = 0;

int chksum;
int chkchksum;
int scrollflag = 0;
int stringlength;

byte auth = 76;

//MAIN
void loop()                 
{
  seek();
  delay(50);
  parse();
  delay(50);
  set_flag();
  delay(50);
  if (flag == 1) {
    RFIDFound();
  }
}

/*void RFIDFound(){
  Serial.println(RFIDRead());
  delay(5000);
  if (RFIDWrite(20,100)){
    Serial.println("Ok.");
  }
  else{
    Serial.println("Failed!");
  }
}*/

void halt()
{
  rfid.write((uint8_t)255);
  rfid.write((uint8_t)0);
  rfid.write((uint8_t)1);
  rfid.write((uint8_t)147);
  rfid.write((uint8_t)148);
}

void parse()
{
  while(rfid.available()){
    if(rfid.read() == 255){
      for(int i=1;i<11;i++){
        Str1[i]= rfid.read();
      }
    }
  }
}

void seek()
{
  //search for RFID tag
  rfid.write((uint8_t)255);
  rfid.write((uint8_t)0);
  rfid.write((uint8_t)1);
  rfid.write((uint8_t)130);
  rfid.write((uint8_t)131);
  delay(10);
}

void set_flag()
{
  if(Str1[2] == 6){
    flag++;
  }
  else{
    flag = 0;
  }
}

boolean authenticate(String tempid, String tempcount) //Attempt to authenticate block 0x01 with Transport Key
{
  boolean returnvalue = false;
  rfid.write((uint8_t)255);
  rfid.write((uint8_t)0);
  rfid.write((uint8_t)3);
  rfid.write((uint8_t)133);
  rfid.write((uint8_t)1);
  rfid.write((uint8_t)255);
  rfid.write((uint8_t)136);

  delay(50);
  while(rfid.available()){
    if(rfid.read() == 255){
      for(int i=1;i<11;i++){
        Str2[i]= rfid.read();
      }
    }
  }
    /*Serial.print("Login Status: "); //Status of Login attempt
    Serial.print(Str2[1], HEX);
    Serial.print(Str2[2], HEX);
    Serial.print(Str2[3], HEX);
    Serial.print(Str2[4], HEX);
    
    if(Str2[4] == auth){Serial.print(" (Successful!)");} //If successful, tell the user
    else {Serial.print(" (Failed.)");} //If any other that successful
    
    Serial.println();  //Make some breathing room on the terminal
*/

  rfid.write((uint8_t)255);
  rfid.write((uint8_t)0);
  rfid.write((uint8_t)2);
  rfid.write((uint8_t)135);
  rfid.write((uint8_t)1);
  rfid.write((uint8_t)138);
  
  delay(50);
  while(rfid.available()){
    if(rfid.read() == 255){
      for(int i=1;i<11;i++){
        Str4[i]= rfid.read();
      }
    }
  }
   /* Serial.print("Read Status: "); //Return Read attempt status
    Serial.print(Str4[1], HEX);
    Serial.print(Str4[2], HEX);
    Serial.print(Str4[3], HEX);
    Serial.print(Str4[4], HEX);
    Serial.println();
    Serial.print("Block Content: "); 
    
     in1 = char(Str4[5]);
     in2 = char(Str4[6]);
     in3 = char(Str4[7]);
     in4 = char(Str4[8]);
   
    Serial.print(in1); //Return contents of block 0x01
    Serial.print(in2);
    Serial.print(in3);
    Serial.print(in4);
    Serial.println(); */

    //flag2 = 1;
     
   if(Str2[4] == auth){returnvalue = write_Block(tempid, tempcount);}
   return returnvalue;
 }
 

boolean write_Block(String paraid, String paracount){
    boolean returnvalue = false;
    
    int idlength = paraid.length() + 1;
    char idarray[idlength];
    
    paraid.toCharArray(idarray,idlength);
    
    /*Serial.print("To Write: "); //Return Bytes to Write
    Serial.print(idarray[0]);
    Serial.print(idarray[1]);
    Serial.print(idarray[2]);
    Serial.print(idarray[3]);
       
    Serial.println(); //Back up, everyone, give me some space */
    //write to tag
    rfid.write((uint8_t)255); //Command header
    rfid.write((uint8_t)0); //Reserved
    rfid.write((uint8_t)6); 
    rfid.write((uint8_t)138); //Write value block command 
    rfid.write((uint8_t)1); //Number of block to write, change this to write to another block
  
    //data to write
    rfid.write((uint8_t)byte(idarray[0])); //Send four bytes from ealier:
    rfid.write((uint8_t)byte(idarray[1]));
    rfid.write((uint8_t)byte(idarray[2]));
    rfid.write((uint8_t)byte(idarray[3]));
  
    //close write command
    chksum = 6+138+1+byte(idarray[0])+byte(idarray[1])+byte(idarray[2])+byte(idarray[3]); //calculate checksum
    rfid.write((uint8_t)chksum);
  
    delay(50); //get response
    while(rfid.available()){
      if(rfid.read() == 255){
        for(int i=1;i<11;i++){
          Str3[i]= rfid.read();
        }
      }
    }
 
    chkchksum = Str3[1] + Str3[2] + Str3[3] + Str3[4] + Str3[5] + Str3[6] + Str3[7] + Str3[8];

    if(chksum == chkchksum)
    {
      returnvalue = true;
    }
    else
    {
      returnvalue = false;
    }
    
    int countlength = paracount.length() + 1;
    char countarray[countlength];
    
    paracount.toCharArray(countarray,countlength);
    
    /*Serial.print("To Write: "); //Return Bytes to Write
    Serial.print(countarray[0]);
    Serial.print(countarray[1]);
    Serial.print(countarray[2]);
    Serial.print(countarray[3]);
    
    Serial.println();*/
    
    rfid.write((uint8_t)255); //Command header
    rfid.write((uint8_t)0); //Reserved
    rfid.write((uint8_t)6); 
    rfid.write((uint8_t)138); //Write value block command 
    rfid.write((uint8_t)2); //Number of block to write, change this to write to another block
    
    rfid.write((uint8_t)byte(countarray[0]));
    rfid.write((uint8_t)byte(countarray[1]));
    rfid.write((uint8_t)byte(countarray[2]));
    rfid.write((uint8_t)byte(countarray[3]));
  
    chksum = 6+138+2+byte(countarray[0])+byte(countarray[1])+byte(countarray[2])+byte(countarray[3]); //calculate checksum
    rfid.write((uint8_t)chksum);

    delay(50); //get response
    while(rfid.available()){
      if(rfid.read() == 255){
        for(int i=1;i<11;i++){
          Str3[i]= rfid.read();
        }
      }
    }
  
    chkchksum = Str3[1] + Str3[2] + Str3[3] + Str3[4] + Str3[5] + Str3[6] + Str3[7] + Str3[8];

    if(chksum == chkchksum)
    {
      returnvalue = true;
    }
    else
    {
      returnvalue = false;
    }
    return returnvalue;
}

boolean RFIDWrite (int id, int count){
  String tempid;
  String tempcount;
  if (id < 10){
    tempid = "000" + String(id);
  }
  else if (id < 100 && id >= 10) {
    tempid = "00" + String(id);
  }
  else if (id < 1000 && id >= 100) {
    tempid = "0" +  String(id);
  }
  else {
    tempid = String(id);
  }
  
  if (count < 10){
    tempcount = "0" + String(count);
  }
  else if (count < 100 && count >= 10) {
    tempcount = "00" + String(count);
  }
  else if (count < 1000 && count >= 100) {
    tempcount = "0" +  String(count);
  }
  else {
    tempcount = String(count);
  }

  return (authenticate(tempid, tempcount));
}

String RFIDRead (){
  byte auth = 76;
  String Fetchedid;
  String Fetchedcount;
  char a, b, c, d;
  
  rfid.write((uint8_t)255);
  rfid.write((uint8_t)0);
  rfid.write((uint8_t)3);
  rfid.write((uint8_t)133);
  rfid.write((uint8_t)1);
  rfid.write((uint8_t)255);
  rfid.write((uint8_t)136);

  delay(50);
  while(rfid.available()){
    if(rfid.read() == 255){
      for(int i=1;i<11;i++){
        Str2[i]= rfid.read();
      }
    }
  }

  delay(50);
  
  rfid.write((uint8_t)255);
  rfid.write((uint8_t)0);
  rfid.write((uint8_t)2);
  rfid.write((uint8_t)135);
  rfid.write((uint8_t)1);
  rfid.write((uint8_t)138);
  
  delay(50);
  while(rfid.available()){
    if(rfid.read() == 255){
      for(int i=1;i<11;i++){
        Str1[i]= rfid.read();
      }
    }
  }
  
  a = char(Str1[5]);
  b = char(Str1[6]);
  c = char(Str1[7]);
  d = char(Str1[8]);
  
  Fetchedid = String(a) + String(b) + String(c) + String(d);
  
  rfid.write((uint8_t)255);
  rfid.write((uint8_t)0);
  rfid.write((uint8_t)2);
  rfid.write((uint8_t)135);
  rfid.write((uint8_t)2);
  rfid.write((uint8_t)139);

  delay(50);
  while(rfid.available()){
    if(rfid.read() == 255){
      for(int i=1;i<11;i++){
        Str1[i]= rfid.read();
      }
    }
  }
  a = char(Str1[5]); //Convert contents of block 0x01 from Hex
  b = char(Str1[6]);
  c = char(Str1[7]);
  d = char(Str1[8]);
  
  Fetchedcount = String(a) + String(b) + String(c) + String(d);
  
  return (Fetchedid + "#" + Fetchedcount);
}

void LCDPrint(String input, int line)
{
lcd.setCursor(0,line);
lcd.print("                ");
lcd.setCursor(0,line);
lcd.print(input);
}