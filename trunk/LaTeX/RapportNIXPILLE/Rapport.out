\BOOKMARK [0][-]{chapter*.1}{Prolog}{}% 1
\BOOKMARK [0][-]{chapter.1}{1 Introduction}{}% 2
\BOOKMARK [1][-]{section.1.1}{1.1 Environment for this Project}{chapter.1}% 3
\BOOKMARK [2][-]{subsection.1.1.1}{1.1.1 Solution in Bars}{section.1.1}% 4
\BOOKMARK [1][-]{section.1.2}{1.2 Problem Statement}{chapter.1}% 5
\BOOKMARK [2][-]{subsection.1.2.1}{1.2.1 Sub Statements}{section.1.2}% 6
\BOOKMARK [1][-]{section.1.3}{1.3 Report Structure}{chapter.1}% 7
\BOOKMARK [0][-]{chapter.2}{2 Language Specification}{}% 8
\BOOKMARK [1][-]{section.2.1}{2.1 Paradigms of Programming Language}{chapter.2}% 9
\BOOKMARK [2][-]{subsection.2.1.1}{2.1.1 Imperative Programming}{section.2.1}% 10
\BOOKMARK [2][-]{subsection.2.1.2}{2.1.2 Functional Programming}{section.2.1}% 11
\BOOKMARK [2][-]{subsection.2.1.3}{2.1.3 Object-Oriented Programming}{section.2.1}% 12
\BOOKMARK [2][-]{subsection.2.1.4}{2.1.4 Logic Programming}{section.2.1}% 13
\BOOKMARK [2][-]{subsection.2.1.5}{2.1.5 Choice of Paradigm in This Project}{section.2.1}% 14
\BOOKMARK [1][-]{section.2.2}{2.2 Design Criteria}{chapter.2}% 15
\BOOKMARK [2][-]{subsection.2.2.1}{2.2.1 Programming an Arduino-based Drinks-mixer}{section.2.2}% 16
\BOOKMARK [2][-]{subsection.2.2.2}{2.2.2 Design Criteria in This Project}{section.2.2}% 17
\BOOKMARK [1][-]{section.2.3}{2.3 Syntax}{chapter.2}% 18
\BOOKMARK [2][-]{subsection.2.3.1}{2.3.1 Grammartypes}{section.2.3}% 19
\BOOKMARK [3][-]{subsubsection.2.3.1.1}{2.3.1.1 Type - 3: Regular Grammar}{subsection.2.3.1}% 20
\BOOKMARK [3][-]{subsubsection.2.3.1.2}{2.3.1.2 Type - 2: Context-Free Grammar}{subsection.2.3.1}% 21
\BOOKMARK [3][-]{subsubsection.2.3.1.3}{2.3.1.3 Type - 1: Context-Sensitive Grammar}{subsection.2.3.1}% 22
\BOOKMARK [3][-]{subsubsection.2.3.1.4}{2.3.1.4 Type - 0: Recursively Enumerable}{subsection.2.3.1}% 23
\BOOKMARK [2][-]{subsection.2.3.2}{2.3.2 Grammar}{section.2.3}% 24
\BOOKMARK [2][-]{subsection.2.3.3}{2.3.3 Choice of Grammar}{section.2.3}% 25
\BOOKMARK [2][-]{subsection.2.3.4}{2.3.4 The BNF of SPLAD}{section.2.3}% 26
\BOOKMARK [2][-]{subsection.2.3.5}{2.3.5 EBNF?}{section.2.3}% 27
\BOOKMARK [2][-]{subsection.2.3.6}{2.3.6 Lexicon}{section.2.3}% 28
\BOOKMARK [1][-]{section.2.4}{2.4 Semantics}{chapter.2}% 29
\BOOKMARK [2][-]{subsection.2.4.1}{2.4.1 Scoping}{section.2.4}% 30
\BOOKMARK [3][-]{subsubsection.2.4.1.1}{2.4.1.1 Symbol Tables}{subsection.2.4.1}% 31
\BOOKMARK [2][-]{subsection.2.4.2}{2.4.2 Transition Rules}{section.2.4}% 32
\BOOKMARK [2][-]{subsection.2.4.3}{2.4.3 Type Rules}{section.2.4}% 33
\BOOKMARK [1][-]{section.2.5}{2.5 Code Examples}{chapter.2}% 34
\BOOKMARK [0][-]{chapter.3}{3 Implementation}{}% 35
\BOOKMARK [1][-]{section.3.1}{3.1 Design Criteria}{chapter.3}% 36
\BOOKMARK [1][-]{section.3.2}{3.2 Architecture}{chapter.3}% 37
\BOOKMARK [2][-]{subsection.3.2.1}{3.2.1 Hardware}{section.3.2}% 38
\BOOKMARK [3][-]{subsubsection.3.2.1.1}{3.2.1.1 Hardware platform}{subsection.3.2.1}% 39
\BOOKMARK [3][-]{subsubsection.3.2.1.2}{3.2.1.2 RFID}{subsection.3.2.1}% 40
\BOOKMARK [3][-]{subsubsection.3.2.1.3}{3.2.1.3 Other components}{subsection.3.2.1}% 41
\BOOKMARK [2][-]{subsection.3.2.2}{3.2.2 Overview of the Compiler}{section.3.2}% 42
\BOOKMARK [2][-]{subsection.3.2.3}{3.2.3 Language Processing Strategy}{section.3.2}% 43
\BOOKMARK [2][-]{subsection.3.2.4}{3.2.4 Compilation Passes}{section.3.2}% 44
\BOOKMARK [2][-]{subsection.3.2.5}{3.2.5 Abstract Syntax Trees}{section.3.2}% 45
\BOOKMARK [2][-]{subsection.3.2.6}{3.2.6 The Visitor Pattern}{section.3.2}% 46
\BOOKMARK [1][-]{section.3.3}{3.3 Syntactic Analysis}{chapter.3}% 47
\BOOKMARK [2][-]{subsection.3.3.1}{3.3.1 Semantic Analysis}{section.3.3}% 48
\BOOKMARK [2][-]{subsection.3.3.2}{3.3.2 Known lexers and parsers}{section.3.3}% 49
\BOOKMARK [3][-]{subsubsection.3.3.2.1}{3.3.2.1 Lexer}{subsection.3.3.2}% 50
\BOOKMARK [3][-]{subsubsection.3.3.2.2}{3.3.2.2 Parser}{subsection.3.3.2}% 51
\BOOKMARK [3][-]{subsubsection.3.3.2.3}{3.3.2.3 Lexer and parser}{subsection.3.3.2}% 52
\BOOKMARK [3][-]{subsubsection.3.3.2.4}{3.3.2.4 Comparison Table}{subsection.3.3.2}% 53
\BOOKMARK [2][-]{subsection.3.3.3}{3.3.3 ANTLR}{section.3.3}% 54
\BOOKMARK [2][-]{subsection.3.3.4}{3.3.4 Lexical Analyzer}{section.3.3}% 55
\BOOKMARK [3][-]{subsubsection.3.3.4.1}{3.3.4.1 Scanner Class Generation}{subsection.3.3.4}% 56
\BOOKMARK [2][-]{subsection.3.3.5}{3.3.5 Tokens}{section.3.3}% 57
\BOOKMARK [3][-]{subsubsection.3.3.5.1}{3.3.5.1 Reserved Keywords}{subsection.3.3.5}% 58
\BOOKMARK [3][-]{subsubsection.3.3.5.2}{3.3.5.2 Token Specification}{subsection.3.3.5}% 59
\BOOKMARK [2][-]{subsection.3.3.6}{3.3.6 Parser}{section.3.3}% 60
\BOOKMARK [3][-]{subsubsection.3.3.6.1}{3.3.6.1 Top-down Parsers}{subsection.3.3.6}% 61
\BOOKMARK [3][-]{subsubsection.3.3.6.2}{3.3.6.2 Bottom-Up Parsers}{subsection.3.3.6}% 62
\BOOKMARK [1][-]{section.3.4}{3.4 Contextual Analysis}{chapter.3}% 63
\BOOKMARK [2][-]{subsection.3.4.1}{3.4.1 Scope Checking}{section.3.4}% 64
\BOOKMARK [2][-]{subsection.3.4.2}{3.4.2 Type Checking}{section.3.4}% 65
\BOOKMARK [1][-]{section.3.5}{3.5 Code Generation}{chapter.3}% 66
\BOOKMARK [2][-]{subsection.3.5.1}{3.5.1 Declaration}{section.3.5}% 67
\BOOKMARK [2][-]{subsection.3.5.2}{3.5.2 Commands}{section.3.5}% 68
\BOOKMARK [2][-]{subsection.3.5.3}{3.5.3 Expressions}{section.3.5}% 69
\BOOKMARK [0][-]{chapter.4}{4 Conclusion}{}% 70
\BOOKMARK [0][-]{section*.15}{Bibliography}{}% 71
\BOOKMARK [0][-]{appendix.A}{A Semantics}{}% 72
\BOOKMARK [1][-]{section.A.1}{A.1 Transition Rules}{appendix.A}% 73
