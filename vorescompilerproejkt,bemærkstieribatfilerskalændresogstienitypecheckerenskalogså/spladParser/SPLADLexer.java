// Generated from SPLAD.g4 by ANTLR 4.0
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class SPLADLexer extends Lexer {
	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__48=1, T__47=2, T__46=3, T__45=4, T__44=5, T__43=6, T__42=7, T__41=8, 
		T__40=9, T__39=10, T__38=11, T__37=12, T__36=13, T__35=14, T__34=15, T__33=16, 
		T__32=17, T__31=18, T__30=19, T__29=20, T__28=21, T__27=22, T__26=23, 
		T__25=24, T__24=25, T__23=26, T__22=27, T__21=28, T__20=29, T__19=30, 
		T__18=31, T__17=32, T__16=33, T__15=34, T__14=35, T__13=36, T__12=37, 
		T__11=38, T__10=39, T__9=40, T__8=41, T__7=42, T__6=43, T__5=44, T__4=45, 
		T__3=46, T__2=47, T__1=48, T__0=49, ARRAYCALL=50, STRINGTOKEN=51, LETTER=52, 
		DIGIT=53, NOTZERODIGIT=54, COMMENT=55, WS=56, OTHER=57;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"<INVALID>",
		"'from'", "']'", "'using'", "'default'", "','", "'-'", "'*'", "'['", "'while'", 
		"'('", "':'", "'if'", "'int'", "'<'", "'false'", "'!='", "'<='", "'to'", 
		"'double'", "'break'", "'OR'", "'nothing'", "'else'", "'HIGH'", "'true'", 
		"'char'", "'case'", "'AND'", "'.'", "'bool'", "')'", "'function'", "'step'", 
		"'+'", "'='", "'return'", "';'", "'container'", "'>'", "'call'", "'string'", 
		"'begin'", "'switch'", "'/'", "'>='", "'end'", "'!'", "'LOW'", "'<--'", 
		"ARRAYCALL", "STRINGTOKEN", "LETTER", "DIGIT", "NOTZERODIGIT", "COMMENT", 
		"WS", "' '"
	};
	public static final String[] ruleNames = {
		"T__48", "T__47", "T__46", "T__45", "T__44", "T__43", "T__42", "T__41", 
		"T__40", "T__39", "T__38", "T__37", "T__36", "T__35", "T__34", "T__33", 
		"T__32", "T__31", "T__30", "T__29", "T__28", "T__27", "T__26", "T__25", 
		"T__24", "T__23", "T__22", "T__21", "T__20", "T__19", "T__18", "T__17", 
		"T__16", "T__15", "T__14", "T__13", "T__12", "T__11", "T__10", "T__9", 
		"T__8", "T__7", "T__6", "T__5", "T__4", "T__3", "T__2", "T__1", "T__0", 
		"ARRAYCALL", "STRINGTOKEN", "LETTER", "DIGIT", "NOTZERODIGIT", "COMMENT", 
		"WS", "OTHER"
	};


	public SPLADLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "SPLAD.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	@Override
	public void action(RuleContext _localctx, int ruleIndex, int actionIndex) {
		switch (ruleIndex) {
		case 54: COMMENT_action((RuleContext)_localctx, actionIndex); break;

		case 55: WS_action((RuleContext)_localctx, actionIndex); break;

		case 56: OTHER_action((RuleContext)_localctx, actionIndex); break;
		}
	}
	private void WS_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 1: skip();  break;
		}
	}
	private void OTHER_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 2: skip();  break;
		}
	}
	private void COMMENT_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 0: skip();  break;
		}
	}

	public static final String _serializedATN =
		"\2\4;\u017b\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t"+
		"\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20"+
		"\t\20\4\21\t\21\4\22\t\22\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27"+
		"\t\27\4\30\t\30\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36"+
		"\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4"+
		"(\t(\4)\t)\4*\t*\4+\t+\4,\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62"+
		"\t\62\4\63\t\63\4\64\t\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4"+
		":\t:\3\2\3\2\3\2\3\2\3\2\3\3\3\3\3\4\3\4\3\4\3\4\3\4\3\4\3\5\3\5\3\5\3"+
		"\5\3\5\3\5\3\5\3\5\3\6\3\6\3\7\3\7\3\b\3\b\3\t\3\t\3\n\3\n\3\n\3\n\3\n"+
		"\3\n\3\13\3\13\3\f\3\f\3\r\3\r\3\r\3\16\3\16\3\16\3\16\3\17\3\17\3\20"+
		"\3\20\3\20\3\20\3\20\3\20\3\21\3\21\3\21\3\22\3\22\3\22\3\23\3\23\3\23"+
		"\3\24\3\24\3\24\3\24\3\24\3\24\3\24\3\25\3\25\3\25\3\25\3\25\3\25\3\26"+
		"\3\26\3\26\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\27\3\30\3\30\3\30\3\30"+
		"\3\30\3\31\3\31\3\31\3\31\3\31\3\32\3\32\3\32\3\32\3\32\3\33\3\33\3\33"+
		"\3\33\3\33\3\34\3\34\3\34\3\34\3\34\3\35\3\35\3\35\3\35\3\36\3\36\3\37"+
		"\3\37\3\37\3\37\3\37\3 \3 \3!\3!\3!\3!\3!\3!\3!\3!\3!\3\"\3\"\3\"\3\""+
		"\3\"\3#\3#\3$\3$\3%\3%\3%\3%\3%\3%\3%\3&\3&\3\'\3\'\3\'\3\'\3\'\3\'\3"+
		"\'\3\'\3\'\3\'\3(\3(\3)\3)\3)\3)\3)\3*\3*\3*\3*\3*\3*\3*\3+\3+\3+\3+\3"+
		"+\3+\3,\3,\3,\3,\3,\3,\3,\3-\3-\3.\3.\3.\3/\3/\3/\3/\3\60\3\60\3\61\3"+
		"\61\3\61\3\61\3\62\3\62\3\62\3\62\3\63\3\63\3\63\3\63\3\64\3\64\7\64\u014c"+
		"\n\64\f\64\16\64\u014f\13\64\3\64\3\64\3\65\6\65\u0154\n\65\r\65\16\65"+
		"\u0155\3\66\6\66\u0159\n\66\r\66\16\66\u015a\3\67\3\67\7\67\u015f\n\67"+
		"\f\67\16\67\u0162\13\67\38\38\38\78\u0167\n8\f8\168\u016a\138\38\38\3"+
		"8\38\38\39\69\u0172\n9\r9\169\u0173\39\39\3:\3:\3:\3:\4\u014d\u0168;\3"+
		"\3\1\5\4\1\7\5\1\t\6\1\13\7\1\r\b\1\17\t\1\21\n\1\23\13\1\25\f\1\27\r"+
		"\1\31\16\1\33\17\1\35\20\1\37\21\1!\22\1#\23\1%\24\1\'\25\1)\26\1+\27"+
		"\1-\30\1/\31\1\61\32\1\63\33\1\65\34\1\67\35\19\36\1;\37\1= \1?!\1A\""+
		"\1C#\1E$\1G%\1I&\1K\'\1M(\1O)\1Q*\1S+\1U,\1W-\1Y.\1[/\1]\60\1_\61\1a\62"+
		"\1c\63\1e\64\1g\65\1i\66\1k\67\1m8\1o9\2q:\3s;\4\3\2\7\4C\\c|\3\62;\3"+
		"\63;\3\62;\5\13\f\17\17\"\"\u0180\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2"+
		"\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3"+
		"\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2"+
		"\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2"+
		"\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2"+
		"\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2"+
		"\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2"+
		"O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3"+
		"\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2"+
		"\2\2i\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2\2o\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2\3"+
		"u\3\2\2\2\5z\3\2\2\2\7|\3\2\2\2\t\u0082\3\2\2\2\13\u008a\3\2\2\2\r\u008c"+
		"\3\2\2\2\17\u008e\3\2\2\2\21\u0090\3\2\2\2\23\u0092\3\2\2\2\25\u0098\3"+
		"\2\2\2\27\u009a\3\2\2\2\31\u009c\3\2\2\2\33\u009f\3\2\2\2\35\u00a3\3\2"+
		"\2\2\37\u00a5\3\2\2\2!\u00ab\3\2\2\2#\u00ae\3\2\2\2%\u00b1\3\2\2\2\'\u00b4"+
		"\3\2\2\2)\u00bb\3\2\2\2+\u00c1\3\2\2\2-\u00c4\3\2\2\2/\u00cc\3\2\2\2\61"+
		"\u00d1\3\2\2\2\63\u00d6\3\2\2\2\65\u00db\3\2\2\2\67\u00e0\3\2\2\29\u00e5"+
		"\3\2\2\2;\u00e9\3\2\2\2=\u00eb\3\2\2\2?\u00f0\3\2\2\2A\u00f2\3\2\2\2C"+
		"\u00fb\3\2\2\2E\u0100\3\2\2\2G\u0102\3\2\2\2I\u0104\3\2\2\2K\u010b\3\2"+
		"\2\2M\u010d\3\2\2\2O\u0117\3\2\2\2Q\u0119\3\2\2\2S\u011e\3\2\2\2U\u0125"+
		"\3\2\2\2W\u012b\3\2\2\2Y\u0132\3\2\2\2[\u0134\3\2\2\2]\u0137\3\2\2\2_"+
		"\u013b\3\2\2\2a\u013d\3\2\2\2c\u0141\3\2\2\2e\u0145\3\2\2\2g\u0149\3\2"+
		"\2\2i\u0153\3\2\2\2k\u0158\3\2\2\2m\u015c\3\2\2\2o\u0163\3\2\2\2q\u0171"+
		"\3\2\2\2s\u0177\3\2\2\2uv\7h\2\2vw\7t\2\2wx\7q\2\2xy\7o\2\2y\4\3\2\2\2"+
		"z{\7_\2\2{\6\3\2\2\2|}\7w\2\2}~\7u\2\2~\177\7k\2\2\177\u0080\7p\2\2\u0080"+
		"\u0081\7i\2\2\u0081\b\3\2\2\2\u0082\u0083\7f\2\2\u0083\u0084\7g\2\2\u0084"+
		"\u0085\7h\2\2\u0085\u0086\7c\2\2\u0086\u0087\7w\2\2\u0087\u0088\7n\2\2"+
		"\u0088\u0089\7v\2\2\u0089\n\3\2\2\2\u008a\u008b\7.\2\2\u008b\f\3\2\2\2"+
		"\u008c\u008d\7/\2\2\u008d\16\3\2\2\2\u008e\u008f\7,\2\2\u008f\20\3\2\2"+
		"\2\u0090\u0091\7]\2\2\u0091\22\3\2\2\2\u0092\u0093\7y\2\2\u0093\u0094"+
		"\7j\2\2\u0094\u0095\7k\2\2\u0095\u0096\7n\2\2\u0096\u0097\7g\2\2\u0097"+
		"\24\3\2\2\2\u0098\u0099\7*\2\2\u0099\26\3\2\2\2\u009a\u009b\7<\2\2\u009b"+
		"\30\3\2\2\2\u009c\u009d\7k\2\2\u009d\u009e\7h\2\2\u009e\32\3\2\2\2\u009f"+
		"\u00a0\7k\2\2\u00a0\u00a1\7p\2\2\u00a1\u00a2\7v\2\2\u00a2\34\3\2\2\2\u00a3"+
		"\u00a4\7>\2\2\u00a4\36\3\2\2\2\u00a5\u00a6\7h\2\2\u00a6\u00a7\7c\2\2\u00a7"+
		"\u00a8\7n\2\2\u00a8\u00a9\7u\2\2\u00a9\u00aa\7g\2\2\u00aa \3\2\2\2\u00ab"+
		"\u00ac\7#\2\2\u00ac\u00ad\7?\2\2\u00ad\"\3\2\2\2\u00ae\u00af\7>\2\2\u00af"+
		"\u00b0\7?\2\2\u00b0$\3\2\2\2\u00b1\u00b2\7v\2\2\u00b2\u00b3\7q\2\2\u00b3"+
		"&\3\2\2\2\u00b4\u00b5\7f\2\2\u00b5\u00b6\7q\2\2\u00b6\u00b7\7w\2\2\u00b7"+
		"\u00b8\7d\2\2\u00b8\u00b9\7n\2\2\u00b9\u00ba\7g\2\2\u00ba(\3\2\2\2\u00bb"+
		"\u00bc\7d\2\2\u00bc\u00bd\7t\2\2\u00bd\u00be\7g\2\2\u00be\u00bf\7c\2\2"+
		"\u00bf\u00c0\7m\2\2\u00c0*\3\2\2\2\u00c1\u00c2\7Q\2\2\u00c2\u00c3\7T\2"+
		"\2\u00c3,\3\2\2\2\u00c4\u00c5\7p\2\2\u00c5\u00c6\7q\2\2\u00c6\u00c7\7"+
		"v\2\2\u00c7\u00c8\7j\2\2\u00c8\u00c9\7k\2\2\u00c9\u00ca\7p\2\2\u00ca\u00cb"+
		"\7i\2\2\u00cb.\3\2\2\2\u00cc\u00cd\7g\2\2\u00cd\u00ce\7n\2\2\u00ce\u00cf"+
		"\7u\2\2\u00cf\u00d0\7g\2\2\u00d0\60\3\2\2\2\u00d1\u00d2\7J\2\2\u00d2\u00d3"+
		"\7K\2\2\u00d3\u00d4\7I\2\2\u00d4\u00d5\7J\2\2\u00d5\62\3\2\2\2\u00d6\u00d7"+
		"\7v\2\2\u00d7\u00d8\7t\2\2\u00d8\u00d9\7w\2\2\u00d9\u00da\7g\2\2\u00da"+
		"\64\3\2\2\2\u00db\u00dc\7e\2\2\u00dc\u00dd\7j\2\2\u00dd\u00de\7c\2\2\u00de"+
		"\u00df\7t\2\2\u00df\66\3\2\2\2\u00e0\u00e1\7e\2\2\u00e1\u00e2\7c\2\2\u00e2"+
		"\u00e3\7u\2\2\u00e3\u00e4\7g\2\2\u00e48\3\2\2\2\u00e5\u00e6\7C\2\2\u00e6"+
		"\u00e7\7P\2\2\u00e7\u00e8\7F\2\2\u00e8:\3\2\2\2\u00e9\u00ea\7\60\2\2\u00ea"+
		"<\3\2\2\2\u00eb\u00ec\7d\2\2\u00ec\u00ed\7q\2\2\u00ed\u00ee\7q\2\2\u00ee"+
		"\u00ef\7n\2\2\u00ef>\3\2\2\2\u00f0\u00f1\7+\2\2\u00f1@\3\2\2\2\u00f2\u00f3"+
		"\7h\2\2\u00f3\u00f4\7w\2\2\u00f4\u00f5\7p\2\2\u00f5\u00f6\7e\2\2\u00f6"+
		"\u00f7\7v\2\2\u00f7\u00f8\7k\2\2\u00f8\u00f9\7q\2\2\u00f9\u00fa\7p\2\2"+
		"\u00faB\3\2\2\2\u00fb\u00fc\7u\2\2\u00fc\u00fd\7v\2\2\u00fd\u00fe\7g\2"+
		"\2\u00fe\u00ff\7r\2\2\u00ffD\3\2\2\2\u0100\u0101\7-\2\2\u0101F\3\2\2\2"+
		"\u0102\u0103\7?\2\2\u0103H\3\2\2\2\u0104\u0105\7t\2\2\u0105\u0106\7g\2"+
		"\2\u0106\u0107\7v\2\2\u0107\u0108\7w\2\2\u0108\u0109\7t\2\2\u0109\u010a"+
		"\7p\2\2\u010aJ\3\2\2\2\u010b\u010c\7=\2\2\u010cL\3\2\2\2\u010d\u010e\7"+
		"e\2\2\u010e\u010f\7q\2\2\u010f\u0110\7p\2\2\u0110\u0111\7v\2\2\u0111\u0112"+
		"\7c\2\2\u0112\u0113\7k\2\2\u0113\u0114\7p\2\2\u0114\u0115\7g\2\2\u0115"+
		"\u0116\7t\2\2\u0116N\3\2\2\2\u0117\u0118\7@\2\2\u0118P\3\2\2\2\u0119\u011a"+
		"\7e\2\2\u011a\u011b\7c\2\2\u011b\u011c\7n\2\2\u011c\u011d\7n\2\2\u011d"+
		"R\3\2\2\2\u011e\u011f\7u\2\2\u011f\u0120\7v\2\2\u0120\u0121\7t\2\2\u0121"+
		"\u0122\7k\2\2\u0122\u0123\7p\2\2\u0123\u0124\7i\2\2\u0124T\3\2\2\2\u0125"+
		"\u0126\7d\2\2\u0126\u0127\7g\2\2\u0127\u0128\7i\2\2\u0128\u0129\7k\2\2"+
		"\u0129\u012a\7p\2\2\u012aV\3\2\2\2\u012b\u012c\7u\2\2\u012c\u012d\7y\2"+
		"\2\u012d\u012e\7k\2\2\u012e\u012f\7v\2\2\u012f\u0130\7e\2\2\u0130\u0131"+
		"\7j\2\2\u0131X\3\2\2\2\u0132\u0133\7\61\2\2\u0133Z\3\2\2\2\u0134\u0135"+
		"\7@\2\2\u0135\u0136\7?\2\2\u0136\\\3\2\2\2\u0137\u0138\7g\2\2\u0138\u0139"+
		"\7p\2\2\u0139\u013a\7f\2\2\u013a^\3\2\2\2\u013b\u013c\7#\2\2\u013c`\3"+
		"\2\2\2\u013d\u013e\7N\2\2\u013e\u013f\7Q\2\2\u013f\u0140\7Y\2\2\u0140"+
		"b\3\2\2\2\u0141\u0142\7>\2\2\u0142\u0143\7/\2\2\u0143\u0144\7/\2\2\u0144"+
		"d\3\2\2\2\u0145\u0146\7]\2\2\u0146\u0147\5m\67\2\u0147\u0148\7_\2\2\u0148"+
		"f\3\2\2\2\u0149\u014d\7$\2\2\u014a\u014c\13\2\2\2\u014b\u014a\3\2\2\2"+
		"\u014c\u014f\3\2\2\2\u014d\u014e\3\2\2\2\u014d\u014b\3\2\2\2\u014e\u0150"+
		"\3\2\2\2\u014f\u014d\3\2\2\2\u0150\u0151\7$\2\2\u0151h\3\2\2\2\u0152\u0154"+
		"\t\2\2\2\u0153\u0152\3\2\2\2\u0154\u0155\3\2\2\2\u0155\u0153\3\2\2\2\u0155"+
		"\u0156\3\2\2\2\u0156j\3\2\2\2\u0157\u0159\t\3\2\2\u0158\u0157\3\2\2\2"+
		"\u0159\u015a\3\2\2\2\u015a\u0158\3\2\2\2\u015a\u015b\3\2\2\2\u015bl\3"+
		"\2\2\2\u015c\u0160\t\4\2\2\u015d\u015f\t\5\2\2\u015e\u015d\3\2\2\2\u015f"+
		"\u0162\3\2\2\2\u0160\u015e\3\2\2\2\u0160\u0161\3\2\2\2\u0161n\3\2\2\2"+
		"\u0162\u0160\3\2\2\2\u0163\u0164\7\61\2\2\u0164\u0168\7,\2\2\u0165\u0167"+
		"\13\2\2\2\u0166\u0165\3\2\2\2\u0167\u016a\3\2\2\2\u0168\u0169\3\2\2\2"+
		"\u0168\u0166\3\2\2\2\u0169\u016b\3\2\2\2\u016a\u0168\3\2\2\2\u016b\u016c"+
		"\7,\2\2\u016c\u016d\7\61\2\2\u016d\u016e\3\2\2\2\u016e\u016f\b8\2\2\u016f"+
		"p\3\2\2\2\u0170\u0172\t\6\2\2\u0171\u0170\3\2\2\2\u0172\u0173\3\2\2\2"+
		"\u0173\u0171\3\2\2\2\u0173\u0174\3\2\2\2\u0174\u0175\3\2\2\2\u0175\u0176"+
		"\b9\3\2\u0176r\3\2\2\2\u0177\u0178\7\"\2\2\u0178\u0179\3\2\2\2\u0179\u017a"+
		"\b:\4\2\u017at\3\2\2\2\t\2\u014d\u0155\u015a\u0160\u0168\u0173";
	public static final ATN _ATN =
		ATNSimulator.deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
	}
}